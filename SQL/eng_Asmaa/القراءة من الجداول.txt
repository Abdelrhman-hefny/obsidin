SELECT, FROM, WHERE, ORDER BY, LIMIT


### ❓ أول حاجة: ليه بنستخدم `SELECT`؟

عشان نعرض بيانات من جدول.

#### 📌 الصيغة العامة:

```sql
SELECT اسم_العمود FROM اسم_الجدول;
```

#### 🧠 مثال بسيط:

عندنا جدول اسمه `students` فيه الأعمدة دي:

| id | name    | age | grade |
| -- | ------- | --- | ----- |
| 1  | Ahmed   | 20  | A     |
| 2  | Mona    | 19  | B     |
| 3  | Youssef | 22  | C     |

✅ لو عايز أجيب كل الأعمدة:

```sql
SELECT * FROM students;
```

✅ لو عايز أجيب بس اسم الطالب والعمر:

```sql
SELECT name, age FROM students;
```

---

### ❓ طيب... إزاي أفلتر البيانات؟ هنا ييجي دور `WHERE`

بنستخدم `WHERE` لما نحب نجيب بيانات معينة بمواصفات خاصة.

#### 📌 الصيغة العامة:

```sql
SELECT الأعمدة FROM الجدول WHERE شرط;
```

#### 🧠 مثال:

✅ عايز أجيب الطلاب اللي عمرهم أكبر من 20:

```sql
SELECT name, age FROM students WHERE age > 20;
```

✅ عايز أجيب الطالب اللي اسمه "Mona":

```sql
SELECT * FROM students WHERE name = 'Mona';
```

✅ عايز أجيب اللي درجته مش A:

```sql
SELECT name, grade FROM students WHERE grade != 'A';
```

🧾 SQL Server – استخدامات مفيدة ومتقدمة لـ SELECT
✅ 1. عرض كل الجداول في قاعدة البيانات الحالية

---

## 🧾 SQL Server – استخدامات مفيدة ومتقدمة لـ `SELECT`

### ✅ 1. **عرض كل الجداول في قاعدة البيانات الحالية**

```sql
SELECT name 
FROM sys.tables;
```

---

### ✅ 2. **عرض أسماء الأعمدة لجدول معيّن**

```sql
SELECT COLUMN_NAME 
FROM INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_NAME = 'اسم_الجدول';
```

---

### ✅ 3. **عرض عدد الصفوف في جدول**

```sql
SELECT COUNT(*) FROM اسم_الجدول;
```

---

### ✅ 4. **عرض أول عدد من الصفوف (TOP)**

```sql
SELECT TOP 5 * FROM اسم_الجدول;
```

---

### ✅ 5. **عرض بيانات بدون تكرار – DISTINCT**

```sql
SELECT DISTINCT grade FROM students;
```

---

### ✅ 6. **التصفية بجزء من الكلمة – LIKE**

```sql
SELECT name FROM students WHERE name LIKE '%ah%';
```

---

### ✅ 7. **تحديد قائمة بالقيم – IN**

```sql
SELECT * FROM students WHERE grade IN ('A', 'B');
```

---

### ✅ 8. **تحديد مدى معين – BETWEEN**

```sql
SELECT * FROM students WHERE age BETWEEN 18 AND 25;
```

---

### ✅ 9. **ترتيب حسب أكثر من عمود**

```sql
SELECT * FROM students ORDER BY grade ASC, age DESC;
```

---

### ✅ 10. **تغيير أسماء الأعمدة – AS**

```sql
SELECT name AS [Student Name], age AS [Student Age] FROM students;
```

---

### ✅ 11. **دوال إحصائية في SELECT**

```sql
SELECT AVG(age) AS [Average Age] FROM students;
SELECT MAX(age) AS [Oldest], MIN(age) AS [Youngest] FROM students;
SELECT COUNT(*) AS [Total A Students] FROM students WHERE grade = 'A';
```

---

### ✅ 12. **عرض اسم قاعدة البيانات الحالية**

```sql
SELECT DB_NAME() AS [Current Database];
```

---

### ✅ 13. **عرض كل قواعد البيانات في السيرفر**

```sql
SELECT name FROM sys.databases;
```

---

### ✅ 14. **عرض كل الـ Views في قاعدة البيانات**

```sql
SELECT name FROM sys.views;
```

---




---

### ❓ طيب إزاي أرتب البيانات؟ هنا ييجي دور `ORDER BY`

بنستخدم `ORDER BY` لما نحب البيانات تظهر بترتيب معين.

#### 📌 الصيغة:

```sql
SELECT الأعمدة FROM الجدول ORDER BY اسم_العمود [ASC | DESC];
```

* `ASC` = ترتيب تصاعدي (ده الافتراضي)
* `DESC` = ترتيب تنازلي

#### 🧠 أمثلة:

✅ عايز أجيب كل الطلاب ومرتبين حسب العمر:

```sql
SELECT name, age FROM students ORDER BY age;
```

✅ عايز أجيبهم بالعكس (من الأكبر للأصغر):

```sql
SELECT name, age FROM students ORDER BY age DESC;
```

✅ عايز أرتب حسب الدرجة (ترتيب أبجدي تنازلي):

```sql
SELECT name, grade FROM students ORDER BY grade DESC;
```

---

### ✅ دمج SELECT + WHERE + ORDER BY مع بعض

#### 🧠 مثال عملي:

✅ عايز أجيب الطلاب اللي أعمارهم فوق 18، ومرتبين حسب العمر تنازليًا:

```sql
SELECT name, age 
FROM students 
WHERE age > 18 
ORDER BY age DESC;
```

---

### 🧠 نصيحة للمذاكرة:

ابدأ بالتجريب العملي على موقع [SQLBolt](https://sqlbolt.com) أو [W3Schools SQL](https://www.w3schools.com/sql/trysql.asp?filename=trysql_select_all) – هتلاقي جداول جاهزة وتقدر تطبق كل الكلام ده بإيدك.


